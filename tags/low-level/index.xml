<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Low Level on pwnbuffer</title>
    <link>https://pwnbuffer.org/tags/low-level/</link>
    <description>Recent content in Low Level on pwnbuffer</description>
    <generator>Hugo</generator>
    <language>pt-br</language>
    <lastBuildDate>Sun, 04 May 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://pwnbuffer.org/tags/low-level/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>x86 Part. 2 — Number System</title>
      <link>https://pwnbuffer.org/posts/neurosys/x86-2/</link>
      <pubDate>Sun, 04 May 2025 00:00:00 +0000</pubDate>
      <guid>https://pwnbuffer.org/posts/neurosys/x86-2/</guid>
      <description>Bem-vindo à segunda parte da nossa série de artigos sobre Engenharia Reversa Básica! Link para o cabeçalho ██ ██ █████ ██████ ██ ██ ██ ██ ██ ███ █████ ███████ ██ ██ ██ ██ ██ ██ ██ ██ █████ ██████ Agora que já exploramos os conceitos fundamentais de CPU no primeiro artigo, chegou a hora de entender como os dados são representados e manipulados internamente pelos computadores. Vamos falar sobre sistemas de numeração, com foco em hexadecimal, que é crucial para quem trabalha com engenharia reversa em baixo nível.</description>
    </item>
    <item>
      <title>Review sobre assembly</title>
      <link>https://pwnbuffer.org/posts/slayer/assembly-review/</link>
      <pubDate>Wed, 30 Apr 2025 00:00:00 +0000</pubDate>
      <guid>https://pwnbuffer.org/posts/slayer/assembly-review/</guid>
      <description>O que é assembly? Link para o cabeçalho Assembly é uma linguagem de programação de baixo nivel, ela é escrita para se comunicar diretamente com o hardware do processador. Ao contrário das linguagens de alto nivel, como o famoso python, o assembly opera próximo ao código de máquina, o famoso binário! Cada instrução em assembly geralmente representa uma única operação da CPU, como mover dados entre registradores, realizar operações aritméticas ou controlar o fluxo de execução.</description>
    </item>
    <item>
      <title>x86 Part. 1 — CPU</title>
      <link>https://pwnbuffer.org/posts/neurosys/x86/</link>
      <pubDate>Sun, 30 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://pwnbuffer.org/posts/neurosys/x86/</guid>
      <description>Essa série de artigos aborda conceitos básicos de baixo nível em computadores, com foco específico na exploração de binários e engenharia reversa. Alguns pontos podem parecer confusos à primeira vista, mas lembre-se: tudo segue uma definição. Não se prenda a uma sequência infinita de &amp;ldquo;porquês!?&amp;rdquo; — apenas compreenda cada conceito e seu propósito. Você vai usar esses conceitos em engenharia reversa, exploração de binários e até no desenvolvimento de malware no futuro.</description>
    </item>
    <item>
      <title>Rootkits em Firmware</title>
      <link>https://pwnbuffer.org/posts/slayer/rootkits-firmware/</link>
      <pubDate>Wed, 05 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://pwnbuffer.org/posts/slayer/rootkits-firmware/</guid>
      <description>O que é um Rootkit? Link para o cabeçalho Um rootkit é um tipo de malware projetado para obter e manter acesso privilegiado a um sistema, ao mesmo tempo em que oculta sua presença. O termo vem da junção de &amp;ldquo;root&amp;rdquo;, que se refere ao usuário com privilégios máximos em sistemas linux, e &amp;ldquo;kit&amp;rdquo; que representa um conjunto de ferramentas utilizadas para controlar o sistema comprometido&#xA;O principal objetivo de um rootkit é garantir persistência, permitindo que um atacante continue acessando o sistema mesmo após reinicializações ou tentativas de remoção.</description>
    </item>
    <item>
      <title>buffer overflow na prática</title>
      <link>https://pwnbuffer.org/posts/slayer/bof/</link>
      <pubDate>Fri, 07 Feb 2025 00:00:00 +0000</pubDate>
      <guid>https://pwnbuffer.org/posts/slayer/bof/</guid>
      <description>O que é buffer overflow? Link para o cabeçalho Buffer overflow (BOF) é uma das vulnerabilidades mais conhecidas e historicamente significativas no mundo da cibersegurança. Ele ocorre quando um programa escreve mais dados em um buffer do que ele pode armazenar, causando corrupção de memória. Essa falha pode ser explorada por pentesters para executar código arbitrário, modificar o comportamento do programa ou causar um crash.&#xA;Apesar da introdução de mecanismos modernos de segurança, como ASLR e stack canaries, o buffer overflow continua sendo um tópico crítico no desenvolvimento de exploits e pentesting.</description>
    </item>
  </channel>
</rss>
